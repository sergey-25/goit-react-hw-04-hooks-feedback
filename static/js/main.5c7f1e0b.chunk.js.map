{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeadbackOptions.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","s","text","Statistics","good","neutral","bad","total","positivePercentage","title","textItem","FeedbackOptions","options","onLeaveFeedback","map","option","id","button","onClick","propTypes","PropTypes","string","isRequired","children","element","Section","wrapper","App","useState","setGood","setNeutral","setBad","styles","display","event","target","textContent","prevGood","prevNeutral","prevBad","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,sCCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,gBAAkB,2C,uICU9DC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGC,UAAWC,IAAEC,KAAhB,SAAuBH,K,gBC2BjBI,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAIR,UAAWC,IAAEQ,MAAjB,wBACW,IAAVF,EACC,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,gCACE,oBAAGC,UAAWC,IAAES,SAAhB,mBAAiCN,KACjC,oBAAGJ,UAAWC,IAAES,SAAhB,sBAAoCL,KACpC,oBAAGL,UAAWC,IAAES,SAAhB,kBAAgCJ,KAChC,oBAAGN,UAAWC,IAAES,SAAhB,oBAAkCH,KAClC,oBAAGP,UAAWC,IAAES,SAAhB,gCAA8CF,EAA9C,c,gBCEKG,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OAET,wBAAQhB,UAAWC,IAAEgB,OAAiBC,QAASL,EAA/C,SACLE,GADuCC,O,gCCM9ClB,aAAaqB,UAAY,CACvBV,MAAOW,IAAUC,OAAOC,WACxBC,SAAUH,IAAUI,QAAQF,YAGfG,MAdC,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,MAAOc,EAAe,EAAfA,SACxB,OACE,sBAAKvB,UAAWC,IAAEyB,QAAlB,UACE,oBAAI1B,UAAWC,IAAEQ,MAAjB,SAAyBA,IACxBc,MCoDQI,MAlDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNxB,EADM,KACAyB,EADA,OAEiBD,mBAAS,GAF1B,mBAENvB,EAFM,KAEGyB,EAFH,OAGSF,mBAAS,GAHlB,mBAGNtB,EAHM,KAGDyB,EAHC,KAiCb,OACI,eAAC,EAAD,CAAStB,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBuB,OAAS,CAACC,QAAQ,QACjCrB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAhCY,SAAAqB,GAElB,OADaA,EAAMC,OAAOC,aAExB,IAAK,OACHP,GAAQ,SAAAQ,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHP,GAAW,SAAAQ,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHP,GAAO,SAAAQ,GAAO,OAAIA,EAAU,SAwB5B,cAAC,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MApBgBH,EAAOC,EAAUC,EAqBjCE,mBAfJgC,KAAKC,MAAOrC,GAAQC,EAAUC,EAAMF,GAAS,MAAQ,QC1B5CsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.5c7f1e0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__VqcrQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__205OQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeadbackOptions_button__2WO4Y\",\"buttonContainer\":\"FeadbackOptions_buttonContainer__r9QjB\"};","import PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.text}>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Statistics</h2>\r\n      {total === 0 ? (\r\n        <Notification message=\"No feedback given\" />\r\n      ) : (\r\n        <div>\r\n          <p className={s.textItem}>Good: {good}</p>\r\n          <p className={s.textItem}>Neutral: {neutral}</p>\r\n          <p className={s.textItem}>Bad: {bad}</p>\r\n          <p className={s.textItem}>Total: {total}</p>\r\n          <p className={s.textItem}>Positive feedback: {positivePercentage}%</p>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport s from './FeadbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((option, id) => (\r\n      \r\n            <button className={s.button} key={id} onClick={onLeaveFeedback}>\r\n      {option}\r\n    </button>\r\n  \r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\r\n\r\nimport Statistics from '../Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Section from '../Section';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const addFeedback = event => {\r\n    const name = event.target.textContent;\r\n    switch (name) {\r\n      case 'good':\r\n        setGood(prevGood => prevGood + 1);\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prevNeutral => prevNeutral + 1);\r\n        break;\r\n      case 'bad':\r\n        setBad(prevBad => prevBad + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  };\r\n\r\n  const countTotalFeedback = () => {\r\n    const totalFeedback = good + neutral + bad;\r\n    return totalFeedback;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const positiveFeedbackPercentage =\r\n      Math.round((good / (neutral + bad + good)) * 100) || 0;\r\n    return positiveFeedbackPercentage;\r\n  };\r\n\r\n  return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions styles ={{display:'flex'}}\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={addFeedback}\r\n        />\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={countTotalFeedback()}\r\n          positivePercentage={countPositiveFeedbackPercentage()}\r\n        ></Statistics>\r\n      </Section>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}